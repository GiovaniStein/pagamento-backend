services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://kafka:9094
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - pagamento_network
  back-db:
    image: mysql/mysql-server:latest
    container_name: mysql-pagamentos
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: db_pagamento_backend
    ports:
      - 3306:3306
    expose:
      - 3306
    networks:
      - pagamento_network
    volumes:
      - db_data:/var/lib/mysql
  pagamento-api:
    container_name: pagamento-api
    depends_on:
      - back-db
      - kafka
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://back-db:3306/db_pagamento_backend?allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      KAFKA_SERVER: kafka:9094
    ports:
      - 8080:8080
    networks:
      - pagamento_network
networks:
  pagamento_network:
    driver: bridge
volumes:
  db_data:
    driver: local